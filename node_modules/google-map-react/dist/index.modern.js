import e,{Component as o}from"react";import t from"prop-types";import n from"react-dom";import i from"eventemitter3";import r from"@mapbox/point-geometry";function s(){return(s=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var t=arguments[o];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function a(e,o){e.prototype=Object.create(o.prototype),e.prototype.constructor=e,e.__proto__=o}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var l={width:"100%",height:"100%",left:0,top:0,margin:0,padding:0,position:"absolute"},u=function(o){function t(){return o.apply(this,arguments)||this}a(t,o);var n=t.prototype;return n.shouldComponentUpdate=function(){return!1},n.render=function(){return e.createElement("div",{ref:this.props.registerChild,style:l})},t}(o),h=function(e){function o(o){var t;return(t=e.call(this)||this).gmapInstance=o,t}a(o,e);var t=o.prototype;return t.getChildren=function(){return this.gmapInstance.props.children},t.getMousePosition=function(){return this.gmapInstance.mouse_},t.getUpdateCounter=function(){return this.gmapInstance.updateCounter_},t.dispose=function(){this.gmapInstance=null,this.removeAllListeners()},o}(i),c=function(e,o){for(var t=s({},e),n=0;n<o.length;n++){var i=o[n];i in t&&delete t[i]}return t},d=Object.prototype.hasOwnProperty;function m(e,o){return e===o?0!==e||0!==o||1/e==1/o:e!=e&&o!=o}function g(e,o){if(m(e,o))return!0;if("object"!=typeof e||null===e||"object"!=typeof o||null===o)return!1;var t=Object.keys(e),n=Object.keys(o);if(t.length!==n.length)return!1;for(var i=0;i<t.length;i++)if(!d.call(o,t[i])||!m(e[t[i]],o[t[i]]))return!1;return!0}var _={width:"100%",height:"100%",left:0,top:0,margin:0,padding:0,position:"absolute"},f={width:0,height:0,left:0,top:0,backgroundColor:"transparent",position:"absolute"},v=function(o){function t(t){var n;return(n=o.call(this,t)||this)._getState=function(){return{children:n.props.dispatcher.getChildren(),updateCounter:n.props.dispatcher.getUpdateCounter()}},n._onChangeHandler=function(){if(n.dimensionsCache_){var e=(n.state.children||[]).length,o=n._getState();n.setState(o,function(){return(o.children||[]).length!==e&&n._onMouseChangeHandler()})}},n._onChildClick=function(){n.props.onChildClick&&n.hoverChildProps_&&n.props.onChildClick(n.hoverKey_,n.hoverChildProps_)},n._onChildMouseDown=function(){n.props.onChildMouseDown&&n.hoverChildProps_&&n.props.onChildMouseDown(n.hoverKey_,n.hoverChildProps_)},n._onChildMouseEnter=function(e,o){n.dimensionsCache_&&(n.props.onChildMouseEnter&&n.props.onChildMouseEnter(e,o),n.hoverChildProps_=o,n.hoverKey_=e,n.setState({hoverKey:e}))},n._onChildMouseLeave=function(){if(n.dimensionsCache_){var e=n.hoverKey_;null!=e&&(n.props.onChildMouseLeave&&n.props.onChildMouseLeave(e,n.hoverChildProps_),n.hoverKey_=null,n.hoverChildProps_=null,n.setState({hoverKey:null}))}},n._onMouseAllow=function(e){e||n._onChildMouseLeave(),n.allowMouse_=e},n._onMouseChangeHandler=function(){n.allowMouse_&&n._onMouseChangeHandlerRaf()},n._onMouseChangeHandlerRaf=function(){if(n.dimensionsCache_){var o=n.props.dispatcher.getMousePosition();if(o){var t=[],i=n.props.getHoverDistance();if(e.Children.forEach(n.state.children,function(e,r){if(e&&(void 0!==e.props.latLng||void 0!==e.props.lat||void 0!==e.props.lng)){var s=null!=e.key?e.key:r,a=n.props.distanceToMouse(n.dimensionsCache_[s],o,e.props);a<i&&t.push({key:s,dist:a,props:e.props})}}),t.length){t.sort(function(e,o){return e.dist-o.dist});var r=t[0].key,s=t[0].props;n.hoverKey_!==r&&(n._onChildMouseLeave(),n._onChildMouseEnter(r,s))}else n._onChildMouseLeave()}else n._onChildMouseLeave()}},n._getDimensions=function(e){return n.dimensionsCache_[e]},n.dimensionsCache_={},n.hoverKey_=null,n.hoverChildProps_=null,n.allowMouse_=!0,n.state=s({},n._getState(),{hoverKey:null}),n}a(t,o);var n=t.prototype;return n.componentDidMount=function(){this.props.dispatcher.on("kON_CHANGE",this._onChangeHandler),this.props.dispatcher.on("kON_MOUSE_POSITION_CHANGE",this._onMouseChangeHandler),this.props.dispatcher.on("kON_CLICK",this._onChildClick),this.props.dispatcher.on("kON_MDOWN",this._onChildMouseDown)},n.shouldComponentUpdate=function(e,o){return!0===this.props.experimental?!g(this.props,e)||!g(c(this.state,["hoverKey"]),c(o,["hoverKey"])):!g(this.props,e)||!g(this.state,o)},n.componentWillUnmount=function(){this.props.dispatcher.removeListener("kON_CHANGE",this._onChangeHandler),this.props.dispatcher.removeListener("kON_MOUSE_POSITION_CHANGE",this._onMouseChangeHandler),this.props.dispatcher.removeListener("kON_CLICK",this._onChildClick),this.props.dispatcher.removeListener("kON_MDOWN",this._onChildMouseDown),this.dimensionsCache_=null},n.render=function(){var o=this,t=this.props.style||_;this.dimensionsCache_={};var n=e.Children.map(this.state.children,function(t,n){if(t){if(void 0===t.props.latLng&&void 0===t.props.lat&&void 0===t.props.lng)return e.cloneElement(t,{$geoService:o.props.geoService,$onMouseAllow:o._onMouseAllow,$prerender:o.props.prerender});var i=void 0!==t.props.latLng?t.props.latLng:{lat:t.props.lat,lng:t.props.lng},r=o.props.insideMapPanes?o.props.geoService.fromLatLngToDivPixel(i):o.props.geoService.fromLatLngToCenterPixel(i),a={left:r.x,top:r.y};if(void 0!==t.props.seLatLng||void 0!==t.props.seLat&&void 0!==t.props.seLng){var p=void 0!==t.props.seLatLng?t.props.seLatLng:{lat:t.props.seLat,lng:t.props.seLng},l=o.props.insideMapPanes?o.props.geoService.fromLatLngToDivPixel(p):o.props.geoService.fromLatLngToCenterPixel(p);a.width=l.x-r.x,a.height=l.y-r.y}var u=o.props.geoService.fromLatLngToContainerPixel(i),h=null!=t.key?t.key:n;return o.dimensionsCache_[h]=s({x:u.x,y:u.y},i),e.createElement("div",{key:h,style:s({},f,a),className:t.props.$markerHolderClassName},e.cloneElement(t,{$hover:h===o.state.hoverKey,$getDimensions:o._getDimensions,$dimensionKey:h,$geoService:o.props.geoService,$onMouseAllow:o._onMouseAllow,$prerender:o.props.prerender}))}});return e.createElement("div",{style:t},n)},t}(o);v.propTypes={geoService:t.any,style:t.any,distanceToMouse:t.func,dispatcher:t.any,onChildClick:t.func,onChildMouseDown:t.func,onChildMouseLeave:t.func,onChildMouseEnter:t.func,getHoverDistance:t.func,insideMapPanes:t.bool,prerender:t.bool},v.defaultProps={insideMapPanes:!1,prerender:!1};var M={width:"50%",height:"50%",left:"50%",top:"50%",margin:0,padding:0,position:"absolute"};function y(o){return e.createElement("div",{style:M},e.createElement(v,s({},o,{prerender:!0})))}var C,w,L=null,b=new Promise(function(e){w=e}),D=function(e,o){return L||(L=require("scriptjs")),e?C||(C=new Promise(function(t,n){if("undefined"!=typeof window)if(window.google&&window.google.maps)t(window.google.maps);else{if(void 0!==window._$_google_map_initialize_$_&&n(new Error("google map initialization error")),window._$_google_map_initialize_$_=function(){delete window._$_google_map_initialize_$_,t(window.google.maps)},"production"!==process.env.NODE_ENV&&Object.keys(e).indexOf("callback")>-1){var i='"callback" key in bootstrapURLKeys is not allowed,\n                          use onGoogleApiLoaded property instead';throw console.error(i),new Error(i)}var r=Object.keys(e).reduce(function(o,t){return o+"&"+t+"="+e[t]},"");L("https://maps.googleapis.com/maps/api/js?callback=_$_google_map_initialize_$_"+r+(o?"&libraries=visualization":""),function(){return void 0===window.google&&n(new Error("google map initialization error (not loaded)"))})}else n(new Error("google map cannot be loaded outside browser env"))}),w(C),C):b};function z(e,o,t){var n=t-o;return e===t?e:((e-o)%n+n)%n+o}var k=function(){function e(e,o){if(isNaN(e)||isNaN(o))throw new Error("Invalid LatLng object: ("+e+", "+o+")");this.lat=+e,this.lng=+o}return e.prototype.wrap=function(){return new e(this.lat,z(this.lng,-180,180))},e}();k.convert=function(e){return e instanceof k?e:Array.isArray(e)?new k(e[0],e[1]):"lng"in e&&"lat"in e?new k(e.lat,e.lng):e};var O=function(){function e(e,o,t){this.tileSize=e||512,this._minZoom=o||0,this._maxZoom=t||52,this.latRange=[-85.05113,85.05113],this.width=0,this.height=0,this.zoom=0,this.center=new k(0,0),this.angle=0}var o,t=e.prototype;return t.zoomScale=function(e){return Math.pow(2,e)},t.scaleZoom=function(e){return Math.log(e)/Math.LN2},t.project=function(e,o){return new r(this.lngX(e.lng,o),this.latY(e.lat,o))},t.unproject=function(e,o){return new k(this.yLat(e.y,o),this.xLng(e.x,o))},t.lngX=function(e,o){return(180+e)*(o||this.worldSize)/360},t.latY=function(e,o){return(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+e*Math.PI/360)))*(o||this.worldSize)/360},t.xLng=function(e,o){return 360*e/(o||this.worldSize)-180},t.yLat=function(e,o){return 360/Math.PI*Math.atan(Math.exp((180-360*e/(o||this.worldSize))*Math.PI/180))-90},t.locationPoint=function(e){var o=this.project(e);return this.centerPoint._sub(this.point._sub(o)._rotate(this.angle))},t.pointLocation=function(e){var o=this.centerPoint._sub(e)._rotate(-this.angle);return this.unproject(this.point.sub(o))},(o=[{key:"minZoom",get:function(){return this._minZoom},set:function(e){this._minZoom=e,this.zoom=Math.max(this.zoom,e)}},{key:"maxZoom",get:function(){return this._maxZoom},set:function(e){this._maxZoom=e,this.zoom=Math.min(this.zoom,e)}},{key:"worldSize",get:function(){return this.tileSize*this.scale}},{key:"centerPoint",get:function(){return new r(0,0)}},{key:"size",get:function(){return new r(this.width,this.height)}},{key:"bearing",get:function(){return-this.angle/Math.PI*180},set:function(e){this.angle=-z(e,-180,180)*Math.PI/180}},{key:"zoom",get:function(){return this._zoom},set:function(e){var o=Math.min(Math.max(e,this.minZoom),this.maxZoom);this._zoom=o,this.scale=this.zoomScale(o),this.tileZoom=Math.floor(o),this.zoomFraction=o-this.tileZoom}},{key:"x",get:function(){return this.lngX(this.center.lng)}},{key:"y",get:function(){return this.latY(this.center.lat)}},{key:"point",get:function(){return new r(this.x,this.y)}}])&&function(e,o){for(var t=0;t<o.length;t++){var n=o[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}(e.prototype,o),e}(),x=function(){function e(e){this.hasSize_=!1,this.hasView_=!1,this.transform_=new O(e||512)}var o=e.prototype;return o.setView=function(e,o,t){this.transform_.center=k.convert(e),this.transform_.zoom=+o,this.transform_.bearing=+t,this.hasView_=!0},o.setViewSize=function(e,o){this.transform_.width=e,this.transform_.height=o,this.hasSize_=!0},o.setMapCanvasProjection=function(e,o){this.maps_=e,this.mapCanvasProjection_=o},o.canProject=function(){return this.hasSize_&&this.hasView_},o.hasSize=function(){return this.hasSize_},o.fromLatLngToCenterPixel=function(e){return this.transform_.locationPoint(k.convert(e))},o.fromLatLngToDivPixel=function(e){if(this.mapCanvasProjection_){var o=new this.maps_.LatLng(e.lat,e.lng);return this.mapCanvasProjection_.fromLatLngToDivPixel(o)}return this.fromLatLngToCenterPixel(e)},o.fromLatLngToContainerPixel=function(e){if(this.mapCanvasProjection_){var o=new this.maps_.LatLng(e.lat,e.lng);return this.mapCanvasProjection_.fromLatLngToContainerPixel(o)}var t=this.fromLatLngToCenterPixel(e);return t.x-=this.transform_.worldSize*Math.round(t.x/this.transform_.worldSize),t.x+=this.transform_.width/2,t.y+=this.transform_.height/2,t},o.fromContainerPixelToLatLng=function(e){if(this.mapCanvasProjection_){var o=this.mapCanvasProjection_.fromContainerPixelToLatLng(e);return{lat:o.lat(),lng:o.lng()}}var t=s({},e);t.x-=this.transform_.width/2,t.y-=this.transform_.height/2;var n=this.transform_.pointLocation(r.convert(t));return n.lng-=360*Math.round(n.lng/360),n},o.getWidth=function(){return this.transform_.width},o.getHeight=function(){return this.transform_.height},o.getZoom=function(){return this.transform_.zoom},o.getCenter=function(){return this.transform_.pointLocation({x:0,y:0})},o.getBounds=function(e,o){var t=e&&e[0]||0,n=e&&e[1]||0,i=e&&e[2]||0,s=e&&e[3]||0;if(this.getWidth()-n-s>0&&this.getHeight()-t-i>0){var a=this.transform_.pointLocation(r.convert({x:s-this.getWidth()/2,y:t-this.getHeight()/2})),p=this.transform_.pointLocation(r.convert({x:this.getWidth()/2-n,y:this.getHeight()/2-i})),l=[a.lat,a.lng,p.lat,p.lng,p.lat,a.lng,a.lat,p.lng];return o&&(l=l.map(function(e){return Math.round(e*o)/o})),l}return[0,0,0,0]},e}();function S(e){if(window.requestAnimationFrame)return window.requestAnimationFrame(e);var o=window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame;return o?o(e):window.setTimeout(e,1e3/60)}var T=Math.log2?Math.log2:function(e){return Math.log(e)/Math.LN2};function E(e,o){return Object.keys(e).reduce(function(t,n){return o(e[n])&&(t[n]=e[n]),t},{})}var P=function(e){if(null!==e&&"object"==typeof e){if(0===Object.keys(e).length)return!0}else if(null==e||""===e)return!0;return!1},A=Object.prototype.toString;function I(e){return"number"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Number]"===A.call(e)}var N=null;function Z(){if(N)return N;if("undefined"!=typeof navigator){var e=navigator.userAgent.indexOf("MSIE")>-1,o=navigator.userAgent.indexOf("Firefox")>-1,t=navigator.userAgent.toLowerCase().indexOf("op")>-1,n=navigator.userAgent.indexOf("Chrome")>-1,i=navigator.userAgent.indexOf("Safari")>-1;return n&&i&&(i=!1),n&&t&&(n=!1),N={isExplorer:e,isFirefox:o,isOpera:t,isChrome:n,isSafari:i}}return N={isChrome:!0,isExplorer:!1,isFirefox:!1,isOpera:!1,isSafari:!1}}var j=function(e){return Function.prototype.toString.call(e)};function U(e){if(!e||"object"!=typeof e)return!1;var o="function"==typeof e.constructor?Object.getPrototypeOf(e):Object.prototype;if(null===o)return!0;var t=o.constructor;return"function"==typeof t&&t instanceof t&&j(t)===j(Object)}function H(e,o,t,n){e.addEventListener(o,t,function(){var e=!1;try{var o=Object.defineProperty({},"passive",{get:function(){e=!0}});window.addEventListener("test",o,o),window.removeEventListener("test",o,o)}catch(o){e=!1}return e}()?{capture:n,passive:!0}:n)}var R,K=!("undefined"==typeof window||!window.document||!window.document.createElement);R=K?window:"undefined"!=typeof self?self:void 0;var G,B="undefined"!=typeof document&&document.attachEvent,W=!1;if(K&&!B){var V=function(){var e=R.requestAnimationFrame||R.mozRequestAnimationFrame||R.webkitRequestAnimationFrame||function(e){return R.setTimeout(e,20)};return function(o){return e(o)}}(),F=(G=R.cancelAnimationFrame||R.mozCancelAnimationFrame||R.webkitCancelAnimationFrame||R.clearTimeout,function(e){return G(e)}),$=function(e){var o=e.__resizeTriggers__,t=o.firstElementChild,n=o.lastElementChild,i=t.firstElementChild;n.scrollLeft=n.scrollWidth,n.scrollTop=n.scrollHeight,i.style.width=t.offsetWidth+1+"px",i.style.height=t.offsetHeight+1+"px",t.scrollLeft=t.scrollWidth,t.scrollTop=t.scrollHeight},q=function(e){var o=this;$(this),this.__resizeRAF__&&F(this.__resizeRAF__),this.__resizeRAF__=V(function(){(function(e){return e.offsetWidth!=e.__resizeLast__.width||e.offsetHeight!=e.__resizeLast__.height})(o)&&(o.__resizeLast__.width=o.offsetWidth,o.__resizeLast__.height=o.offsetHeight,o.__resizeListeners__.forEach(function(t){t.call(o,e)}))})},Y=!1,X="",J="animationstart",Q="Webkit Moz O ms".split(" "),ee="webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" ");if(K){var oe=document.createElement("fakeelement");if(void 0!==oe.style.animationName&&(Y=!0),!1===Y)for(var te=0;te<Q.length;te++)if(void 0!==oe.style[Q[te]+"AnimationName"]){X="-"+Q[te].toLowerCase()+"-",J=ee[te],Y=!0;break}}var ne="resizeanim",ie="@"+X+"keyframes "+ne+" { from { opacity: 0; } to { opacity: 0; } } ",re=X+"animation: 1ms "+ne+"; "}var se=void 0!==n.createPortal,ae=se?n.createPortal:n.unstable_renderSubtreeIntoContainer,pe=function(e){return U(e)?e:{lat:e[0],lng:e[1]}},le=function(e,o){return"production"!==process.env.NODE_ENV&&e<o&&console.warn("GoogleMap: minZoom option is less than recommended minZoom option for your map sizes.\noverrided to value "+o),o<e?e:o},ue=function(o){function t(t){var i;if((i=o.call(this,t)||this)._getMinZoom=function(){if(i.geoService_.getWidth()>0||i.geoService_.getHeight()>0){var e=Math.ceil(i.geoService_.getWidth()/256)+2,o=Math.ceil(i.geoService_.getHeight()/256)+2,t=Math.max(e,o);return Math.ceil(T(t))}return 3},i._computeMinZoom=function(e){return P(e)?i._getMinZoom():e},i._mapDomResizeCallback=function(){if(i.resetSizeOnIdle_=!0,i.maps_){var e=i.props.center||i.props.defaultCenter,o=i.map_.getCenter();i.maps_.event.trigger(i.map_,"resize"),i.map_.setCenter(i.props.resetBoundsOnResize?e:o)}},i._setLayers=function(e){e.forEach(function(e){i.layers_[e]=new i.maps_[e],i.layers_[e].setMap(i.map_)})},i._renderPortal=function(){return e.createElement(v,{experimental:i.props.experimental,onChildClick:i._onChildClick,onChildMouseDown:i._onChildMouseDown,onChildMouseEnter:i._onChildMouseEnter,onChildMouseLeave:i._onChildMouseLeave,geoService:i.geoService_,insideMapPanes:!0,distanceToMouse:i.props.distanceToMouse,getHoverDistance:i._getHoverDistance,dispatcher:i.markersDispatcher_})},i._initMap=function(){if(!i.initialized_){i.initialized_=!0;var e=pe(i.props.center||i.props.defaultCenter);i.geoService_.setView(e,i.props.zoom||i.props.defaultZoom,0),i._onBoundsChanged();var o=s({},i.props.apiKey&&{key:i.props.apiKey},i.props.bootstrapURLKeys);i.props.googleMapLoader(o,i.props.heatmapLibrary).then(function(e){if(i.mounted_){var o,t,r=i.geoService_.getCenter(),a={zoom:i.props.zoom||i.props.defaultZoom,center:new e.LatLng(r.lat,r.lng)};i.props.heatmap.positions&&(Object.assign(p(i),{heatmap:(o=e,t=i.props.heatmap,new o.visualization.HeatmapLayer({data:t.positions.reduce(function(e,t){var n=t.weight,i=void 0===n?1:n;return e.push({location:new o.LatLng(t.lat,t.lng),weight:i}),e},[])}))}),function(e,o){var t=o.options,n=void 0===t?{}:t;Object.keys(n).map(function(o){return e.set(o,n[o])})}(i.heatmap,i.props.heatmap));var l=E(e,U),u="function"==typeof i.props.options?i.props.options(l):i.props.options,h=!P(i.props.draggable)&&{draggable:i.props.draggable},c=i._computeMinZoom(u.minZoom);i.minZoom_=c;var d=s({},{overviewMapControl:!1,streetViewControl:!1,rotateControl:!0,mapTypeControl:!1,styles:[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]}],minZoom:3},{minZoom:c},u,a);i.defaultDraggableOption_=P(d.draggable)?i.defaultDraggableOption_:d.draggable;var m=s({},d,h);m.minZoom=le(m.minZoom,c);var g=new e.Map(n.findDOMNode(i.googleMapDom_),m);i.map_=g,i.maps_=e,i._setLayers(i.props.layerTypes);var _=e.version.match(/^3\.(\d+)\./),f=_&&Number(_[1]),v=p(i),M=Object.assign(new e.OverlayView,{onAdd:function(){var o="undefined"!=typeof screen?screen.width+"px":"2000px",t="undefined"!=typeof screen?screen.height+"px":"2000px",n=document.createElement("div");if(n.style.backgroundColor="transparent",n.style.position="absolute",n.style.left="0px",n.style.top="0px",n.style.width=o,n.style.height=t,v.props.overlayViewDivStyle){var i=v.props.overlayViewDivStyle;"object"==typeof i&&Object.keys(i).forEach(function(e){n.style[e]=i[e]})}this.getPanes().overlayMouseTarget.appendChild(n),v.geoService_.setMapCanvasProjection(e,M.getProjection()),se?v.setState({overlay:n}):ae(v,v._renderPortal(),n,function(){return v.setState({overlay:n})})},onRemove:function(){var e=v.state.overlay;e&&!se&&n.unmountComponentAtNode(e),v.setState({overlay:null})},draw:function(){if(v.updateCounter_++,v._onBoundsChanged(g,e,!v.props.debounced),v.googleApiLoadedCalled_||(v._onGoogleApiLoaded({map:g,maps:e,ref:v.googleMapDom_}),v.googleApiLoadedCalled_=!0),v.mouse_){var o=v.geoService_.fromContainerPixelToLatLng(v.mouse_);v.mouse_.lat=o.lat,v.mouse_.lng=o.lng}v._onChildMouseMove(),v.markersDispatcher_&&(v.markersDispatcher_.emit("kON_CHANGE"),v.fireMouseEventOnIdle_&&v.markersDispatcher_.emit("kON_MOUSE_POSITION_CHANGE"))}});i.overlay_=M,M.setMap(g),i.props.heatmap.positions&&i.heatmap.setMap(g),i.props.onTilesLoaded&&e.event.addListener(g,"tilesloaded",function(){v._onTilesLoaded()}),e.event.addListener(g,"zoom_changed",function(){v.geoService_.getZoom()!==g.getZoom()&&(v.zoomAnimationInProgress_||(v.zoomAnimationInProgress_=!0,v._onZoomAnimationStart(g.zoom)),f<32)&&((new Date).getTime()-i.zoomControlClickTime_<300?S(function(){return S(function(){v.updateCounter_++,v._onBoundsChanged(g,e)})}):(v.updateCounter_++,v._onBoundsChanged(g,e)))}),e.event.addListener(g,"idle",function(){if(i.resetSizeOnIdle_){i._setViewSize();var o=i._computeMinZoom(u.minZoom);o!==i.minZoom_&&(i.minZoom_=o,g.setOptions({minZoom:o})),i.resetSizeOnIdle_=!1}v.zoomAnimationInProgress_&&(v.zoomAnimationInProgress_=!1,v._onZoomAnimationEnd(g.zoom)),v.updateCounter_++,v._onBoundsChanged(g,e),v.dragTime_=0,v.markersDispatcher_&&v.markersDispatcher_.emit("kON_CHANGE")}),e.event.addListener(g,"mouseover",function(){v.mouseInMap_=!0}),e.event.addListener(g,"click",function(){v.mouseInMap_=!0}),e.event.addListener(g,"mouseout",function(){v.mouseInMap_=!1,v.mouse_=null,v.markersDispatcher_.emit("kON_MOUSE_POSITION_CHANGE")}),e.event.addListener(g,"drag",function(){v.dragTime_=(new Date).getTime(),v._onDrag(g)}),e.event.addListener(g,"dragend",function(){var o=e.event.addListener(g,"idle",function(){e.event.removeListener(o),v._onDragEnd(g)})}),e.event.addListener(g,"maptypeid_changed",function(){v._onMapTypeIdChange(g.getMapTypeId())})}}).catch(function(e){throw i._onGoogleApiLoaded({map:null,maps:null,ref:i.googleMapDom_}),console.error(e),e})}},i._onGoogleApiLoaded=function(){var e;i.props.onGoogleApiLoaded&&("production"!==process.env.NODE_ENV&&!0!==i.props.yesIWantToUseGoogleMapApiInternals&&console.warn("GoogleMap: Usage of internal api objects is dangerous and can cause a lot of issues.\nTo hide this warning add yesIWantToUseGoogleMapApiInternals={true} to <GoogleMap instance"),(e=i.props).onGoogleApiLoaded.apply(e,arguments))},i._getHoverDistance=function(){return i.props.hoverDistance},i._onDrag=function(){var e;return i.props.onDrag&&(e=i.props).onDrag.apply(e,arguments)},i._onDragEnd=function(){var e;return i.props.onDragEnd&&(e=i.props).onDragEnd.apply(e,arguments)},i._onMapTypeIdChange=function(){var e;return i.props.onMapTypeIdChange&&(e=i.props).onMapTypeIdChange.apply(e,arguments)},i._onZoomAnimationStart=function(){var e;return i.props.onZoomAnimationStart&&(e=i.props).onZoomAnimationStart.apply(e,arguments)},i._onZoomAnimationEnd=function(){var e;return i.props.onZoomAnimationEnd&&(e=i.props).onZoomAnimationEnd.apply(e,arguments)},i._onTilesLoaded=function(){return i.props.onTilesLoaded&&i.props.onTilesLoaded()},i._onChildClick=function(){var e;if(i.props.onChildClick)return(e=i.props).onChildClick.apply(e,arguments)},i._onChildMouseDown=function(e,o){i.childMouseDownArgs_=[e,o],i.props.onChildMouseDown&&i.props.onChildMouseDown(e,o,s({},i.mouse_))},i._onChildMouseUp=function(){var e;i.childMouseDownArgs_&&(i.props.onChildMouseUp&&(e=i.props).onChildMouseUp.apply(e,i.childMouseDownArgs_.concat([s({},i.mouse_)])),i.childMouseDownArgs_=null,i.childMouseUpTime_=(new Date).getTime())},i._onChildMouseMove=function(){var e;i.childMouseDownArgs_&&i.props.onChildMouseMove&&(e=i.props).onChildMouseMove.apply(e,i.childMouseDownArgs_.concat([s({},i.mouse_)]))},i._onChildMouseEnter=function(){var e;if(i.props.onChildMouseEnter)return(e=i.props).onChildMouseEnter.apply(e,arguments)},i._onChildMouseLeave=function(){var e;if(i.props.onChildMouseLeave)return(e=i.props).onChildMouseLeave.apply(e,arguments)},i._setViewSize=function(){if(i.mounted_){if(document.fullscreen||document.webkitIsFullScreen||document.mozFullScreen||document.msFullscreenElement)i.geoService_.setViewSize(window.innerWidth,window.innerHeight);else{var e=n.findDOMNode(i.googleMapDom_);i.geoService_.setViewSize(e.clientWidth,e.clientHeight)}i._onBoundsChanged()}},i._onWindowResize=function(){i.resetSizeOnIdle_=!0},i._onMapMouseMove=function(e){if(i.mouseInMap_){var o=(new Date).getTime();o-i.mouseMoveTime_>50&&(i.boundingRect_=e.currentTarget.getBoundingClientRect()),i.mouseMoveTime_=o;var t=e.clientX-i.boundingRect_.left,n=e.clientY-i.boundingRect_.top;i.mouse_||(i.mouse_={x:0,y:0,lat:0,lng:0}),i.mouse_.x=t,i.mouse_.y=n;var r=i.geoService_.fromContainerPixelToLatLng(i.mouse_);i.mouse_.lat=r.lat,i.mouse_.lng=r.lng,i._onChildMouseMove(),o-i.dragTime_<100?i.fireMouseEventOnIdle_=!0:(i.markersDispatcher_.emit("kON_MOUSE_POSITION_CHANGE"),i.fireMouseEventOnIdle_=!1)}},i._onClick=function(){var e;return i.props.onClick&&!i.childMouseDownArgs_&&(new Date).getTime()-i.childMouseUpTime_>300&&0===i.dragTime_&&(e=i.props).onClick.apply(e,arguments)},i._onMapClick=function(e){i.markersDispatcher_&&(i._onMapMouseMove(e),(new Date).getTime()-i.dragTime_>100&&(i.mouse_&&i._onClick(s({},i.mouse_,{event:e})),i.markersDispatcher_.emit("kON_CLICK",e)))},i._onMapMouseDownNative=function(e){i.mouseInMap_&&i._onMapMouseDown(e)},i._onMapMouseDown=function(e){i.markersDispatcher_&&(new Date).getTime()-i.dragTime_>100&&(i._onMapMouseMove(e),i.markersDispatcher_.emit("kON_MDOWN",e))},i._onMapMouseDownCapture=function(){Z().isChrome&&(i.zoomControlClickTime_=(new Date).getTime())},i._onKeyDownCapture=function(){Z().isChrome&&(i.zoomControlClickTime_=(new Date).getTime())},i._isCenterDefined=function(e){return e&&(U(e)&&I(e.lat)&&I(e.lng)||2===e.length&&I(e[0])&&I(e[1]))},i._onBoundsChanged=function(e,o,t){if(e){var n=e.getCenter();i.geoService_.setView([n.lat(),n.lng()],e.getZoom(),0)}if((i.props.onChange||i.props.onBoundsChange)&&i.geoService_.canProject()){var r=i.geoService_.getZoom(),a=i.geoService_.getBounds(),p=i.geoService_.getCenter();if(!function(e,o,t){if(e&&o){for(var n=0;n!==e.length;++n)if(Math.abs(e[n]-o[n])>1e-5)return!1;return!0}return!1}(a,i.prevBounds_)&&!1!==t){var l=i.geoService_.getBounds(i.props.margin);i.props.onBoundsChange&&i.props.onBoundsChange(i.centerIsObject_?s({},p):[p.lat,p.lng],r,a,l),i.props.onChange&&i.props.onChange({center:s({},p),zoom:r,bounds:{nw:{lat:a[0],lng:a[1]},se:{lat:a[2],lng:a[3]},sw:{lat:a[4],lng:a[5]},ne:{lat:a[6],lng:a[7]}},marginBounds:{nw:{lat:l[0],lng:l[1]},se:{lat:l[2],lng:l[3]},sw:{lat:l[4],lng:l[5]},ne:{lat:l[6],lng:l[7]}},size:i.geoService_.hasSize()?{width:i.geoService_.getWidth(),height:i.geoService_.getHeight()}:{width:0,height:0}}),i.prevBounds_=a}}},i._registerChild=function(e){i.googleMapDom_=e},i.mounted_=!1,i.initialized_=!1,i.googleApiLoadedCalled_=!1,i.map_=null,i.maps_=null,i.prevBounds_=null,i.heatmap=null,i.layers_={},i.mouse_=null,i.mouseMoveTime_=0,i.boundingRect_=null,i.mouseInMap_=!0,i.dragTime_=0,i.fireMouseEventOnIdle_=!1,i.updateCounter_=0,i.markersDispatcher_=new h(p(i)),i.geoService_=new x(256),i.centerIsObject_=U(i.props.center),i.minZoom_=3,i.defaultDraggableOption_=!0,i.zoomControlClickTime_=0,i.childMouseDownArgs_=null,i.childMouseUpTime_=0,i.googleMapDom_=null,"production"!==process.env.NODE_ENV&&(i.props.apiKey&&console.warn("GoogleMap: apiKey is deprecated, use bootstrapURLKeys={{key: YOUR_API_KEY}} instead."),i.props.onBoundsChange&&console.warn("GoogleMap: onBoundsChange is deprecated, use onChange({center, zoom, bounds, ...other}) instead."),P(i.props.center)&&P(i.props.defaultCenter)&&console.warn("GoogleMap: center or defaultCenter property must be defined"),P(i.props.zoom)&&P(i.props.defaultZoom)&&console.warn("GoogleMap: zoom or defaultZoom property must be defined")),i._isCenterDefined(i.props.center||i.props.defaultCenter)){var r=pe(i.props.center||i.props.defaultCenter);i.geoService_.setView(r,i.props.zoom||i.props.defaultZoom,0)}return i.zoomAnimationInProgress_=!1,i.state={overlay:null},i}a(t,o);var i=t.prototype;return i.componentDidMount=function(){var e=this;this.mounted_=!0,H(window,"resize",this._onWindowResize,!1),H(window,"keydown",this._onKeyDownCapture,!0);var o=n.findDOMNode(this.googleMapDom_);o&&H(o,"mousedown",this._onMapMouseDownNative,!0),H(window,"mouseup",this._onChildMouseUp,!1);var t=s({},this.props.apiKey&&{key:this.props.apiKey},this.props.bootstrapURLKeys);this.props.googleMapLoader(t,this.props.heatmapLibrary),setTimeout(function(){e._setViewSize(),e._isCenterDefined(e.props.center||e.props.defaultCenter)&&e._initMap()},0,this),this.props.resetBoundsOnResize&&function(e,o){if(void 0===e.parentNode){var t=document.createElement("div");e.parentNode=t}e=e.parentNode,B?e.attachEvent("onresize",o):(e.__resizeTriggers__||("static"==getComputedStyle(e).position&&(e.style.position="relative"),function(){if(!W){var e=(ie||"")+".resize-triggers { "+(re||"")+'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',o=document.head||document.getElementsByTagName("head")[0],t=document.createElement("style");t.type="text/css",t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e)),o.appendChild(t),W=!0}}(),e.__resizeLast__={},e.__resizeListeners__=[],(e.__resizeTriggers__=document.createElement("div")).className="resize-triggers",e.__resizeTriggers__.innerHTML='<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>',e.appendChild(e.__resizeTriggers__),$(e),H(e,"scroll",q,!0),J&&e.__resizeTriggers__.addEventListener(J,function(o){o.animationName==ne&&$(e)})),e.__resizeListeners__.push(o))}(o,this._mapDomResizeCallback)},i.UNSAFE_componentWillReceiveProps=function(e){var o=this;if("production"!==process.env.NODE_ENV&&(g(this.props.defaultCenter,e.defaultCenter)||console.warn("GoogleMap: defaultCenter prop changed. You can't change default props."),g(this.props.defaultZoom,e.defaultZoom)||console.warn("GoogleMap: defaultZoom prop changed. You can't change default props.")),!this._isCenterDefined(this.props.center)&&this._isCenterDefined(e.center)&&setTimeout(function(){return o._initMap()},0),this.map_){var t=this.geoService_.getCenter();if(this._isCenterDefined(e.center)){var n=pe(e.center),i=this._isCenterDefined(this.props.center)?pe(this.props.center):null;(!i||Math.abs(n.lat-i.lat)+Math.abs(n.lng-i.lng)>1e-5)&&Math.abs(n.lat-t.lat)+Math.abs(n.lng-t.lng)>1e-5&&this.map_.panTo({lat:n.lat,lng:n.lng})}if(P(e.zoom)||Math.abs(e.zoom-this.props.zoom)>0&&this.map_.setZoom(e.zoom),!P(this.props.draggable)&&P(e.draggable)?this.map_.setOptions({draggable:this.defaultDraggableOption_}):g(this.props.draggable,e.draggable)||this.map_.setOptions({draggable:e.draggable}),!P(e.options)&&!g(this.props.options,e.options)){var r=E(this.maps_,U),s="function"==typeof e.options?e.options(r):e.options;if("minZoom"in(s=c(s,["zoom","center","draggable"]))){var a=this._computeMinZoom(s.minZoom);s.minZoom=le(s.minZoom,a)}this.map_.setOptions(s)}g(e.layerTypes,this.props.layerTypes)||(Object.keys(this.layers_).forEach(function(e){o.layers_[e].setMap(null),delete o.layers_[e]}),this._setLayers(e.layerTypes)),this.heatmap&&!g(e.heatmap.positions,this.props.heatmap.positions)&&this.heatmap.setData(e.heatmap.positions.map(function(e){return{location:new o.maps_.LatLng(e.lat,e.lng),weight:e.weight}})),this.heatmap&&!g(e.heatmap.options,this.props.heatmap.options)&&Object.keys(e.heatmap.options).forEach(function(t){o.heatmap.set(t,e.heatmap.options[t])})}},i.shouldComponentUpdate=function(e,o){return!g(c(this.props,["draggable"]),c(e,["draggable"]))||!g(this.state,o)},i.componentDidUpdate=function(e){this.markersDispatcher_.emit("kON_CHANGE"),g(this.props.hoverDistance,e.hoverDistance)||this.markersDispatcher_.emit("kON_MOUSE_POSITION_CHANGE")},i.componentWillUnmount=function(){this.mounted_=!1;var e,o,t=n.findDOMNode(this.googleMapDom_);t&&t.removeEventListener("mousedown",this._onMapMouseDownNative,!0),window.removeEventListener("resize",this._onWindowResize),window.removeEventListener("keydown",this._onKeyDownCapture),window.removeEventListener("mouseup",this._onChildMouseUp,!1),this.props.resetBoundsOnResize&&(o=this._mapDomResizeCallback,e=(e=t).parentNode,B?e.detachEvent("onresize",o):(e.__resizeListeners__.splice(e.__resizeListeners__.indexOf(o),1),e.__resizeListeners__.length||(e.removeEventListener("scroll",q),e.__resizeTriggers__=!e.removeChild(e.__resizeTriggers__)))),this.overlay_&&this.overlay_.setMap(null),this.maps_&&this.map_&&this.props.shouldUnregisterMapOnUnmount&&(this.map_.setOptions({scrollwheel:!1}),this.maps_.event.clearInstanceListeners(this.map_)),this.props.shouldUnregisterMapOnUnmount&&(this.map_=null,this.maps_=null),this.markersDispatcher_.dispose(),this.resetSizeOnIdle_=!1,this.props.shouldUnregisterMapOnUnmount&&(delete this.map_,delete this.markersDispatcher_)},i.render=function(){var o=this.state.overlay,t=o?null:e.createElement(y,{experimental:this.props.experimental,onChildClick:this._onChildClick,onChildMouseDown:this._onChildMouseDown,onChildMouseEnter:this._onChildMouseEnter,onChildMouseLeave:this._onChildMouseLeave,geoService:this.geoService_,insideMapPanes:!1,distanceToMouse:this.props.distanceToMouse,getHoverDistance:this._getHoverDistance,dispatcher:this.markersDispatcher_});return e.createElement("div",{style:this.props.style,onMouseMove:this._onMapMouseMove,onMouseDownCapture:this._onMapMouseDownCapture,onClick:this._onMapClick},e.createElement(u,{registerChild:this._registerChild}),se&&o&&ae(this._renderPortal(),o),t)},t}(o);function he(e){var o=e.lng,t=Math.sin(e.lat*Math.PI/180),n=o/360+.5,i=.5-.25*Math.log((1+t)/(1-t))/Math.PI;return{x:n,y:i=i<0?0:i>1?1:i}}function ce(e){var o=e.x,t=Math.PI-2*Math.PI*e.y;return{lat:180/Math.PI*Math.atan(.5*(Math.exp(t)-Math.exp(-t))),lng:360*o-180}}function de(e,o,t,n){var i=he(e),r=he(o),s=i.x<r.x?r.x-i.x:1-i.x+r.x,a=r.y-i.y;if(s<=0&&a<=0)return null;var p=T(t/256/Math.abs(s)),l=T(n/256/Math.abs(a)),u=Math.floor(1e-9+Math.min(p,l)),h={x:i.x<r.x?.5*(i.x+r.x):i.x+r.x-1>0?.5*(i.x+r.x-1):.5*(1+i.x+r.x),y:.5*(i.y+r.y)},c=Math.pow(2,u),d=t/c/256/2,m=n/c/256/2,g=ce({x:h.x-d,y:h.y-m}),_=ce({x:h.x+d,y:h.y+m});return{center:ce(h),zoom:u,newBounds:{nw:g,se:_}}}function me(e){var o=e.ne,t=e.sw;return{nw:{lat:o.lat,lng:t.lng},se:{lat:t.lat,lng:o.lng}}}function ge(e){var o=e.nw,t=e.se;return{ne:{lat:o.lat,lng:t.lng},sw:{lat:t.lat,lng:o.lng}}}function _e(e,o){var t,n=e.nw,i=e.se,r=e.ne,a=e.sw,p=o.width,l=o.height;if(n&&i)t=de(n,i,p,l);else{var u=me({ne:r,sw:a});t=de(u.nw,u.se,p,l)}return s({},t,{newBounds:s({},t.newBounds,ge(t.newBounds))})}function fe(e,o,t){var n=function(e,o){var t=function(e,o){var t,n=o.lat,i=o.lng,r=(t=n*Math.PI/180,{metersPerLatDegree:111132.92-559.82*Math.cos(2*t)+1.175*Math.cos(4*t)-.0023*Math.cos(6*t),metersPerLngDegree:111412.84*Math.cos(t)-93.5*Math.cos(3*t)+.118*Math.cos(5*t)}),s=.5*e/r.metersPerLatDegree,a=.5*e/r.metersPerLngDegree;return{nw:{lat:n-s,lng:i-a},se:{lat:n+s,lng:i+a}}}(e,{lat:o.lat,lng:o.lng}),n=t.se,i=he(t.nw),r=he(n);return{w:Math.abs(r.x-i.x),h:Math.abs(r.y-i.y)}}(e,{lat:o.lat,lng:o.lng}),i=n.w,r=n.h,s=Math.pow(2,t);return{w:i*s*256,h:r*s*256}}function ve(e,o){var t=e.x,n=Math.PI-2*Math.PI*e.y/Math.pow(2,o);return{lat:180/Math.PI*Math.atan(.5*(Math.exp(n)-Math.exp(-n))),lng:t/Math.pow(2,o)*360-180}}function Me(e,o){var t=he({lat:e.lat,lng:e.lng}),n=Math.pow(2,o);return{x:Math.floor(t.x*n),y:Math.floor(t.y*n)}}function ye(e,o){for(var t=e.from,n=e.to,i=Math.pow(2,o),r=[],s=t.x;s!==(n.x+1)%i;s=(s+1)%i)for(var a=t.y;a!==(n.y+1)%i;a=(a+1)%i)r.push([o,s,a]);return r}ue.propTypes={apiKey:t.string,bootstrapURLKeys:t.any,defaultCenter:t.oneOfType([t.array,t.shape({lat:t.number,lng:t.number})]),center:t.oneOfType([t.array,t.shape({lat:t.number,lng:t.number})]),defaultZoom:t.number,zoom:t.number,onBoundsChange:t.func,onChange:t.func,onClick:t.func,onChildClick:t.func,onChildMouseDown:t.func,onChildMouseUp:t.func,onChildMouseMove:t.func,onChildMouseEnter:t.func,onChildMouseLeave:t.func,onZoomAnimationStart:t.func,onZoomAnimationEnd:t.func,onDrag:t.func,onDragEnd:t.func,onMapTypeIdChange:t.func,onTilesLoaded:t.func,options:t.any,distanceToMouse:t.func,hoverDistance:t.number,debounced:t.bool,margin:t.array,googleMapLoader:t.any,onGoogleApiLoaded:t.func,yesIWantToUseGoogleMapApiInternals:t.bool,draggable:t.bool,style:t.any,resetBoundsOnResize:t.bool,layerTypes:t.arrayOf(t.string),shouldUnregisterMapOnUnmount:t.bool},ue.defaultProps={distanceToMouse:function(e,o){return Math.sqrt((e.x-o.x)*(e.x-o.x)+(e.y-o.y)*(e.y-o.y))},hoverDistance:30,debounced:!0,options:function(){return{overviewMapControl:!1,streetViewControl:!1,rotateControl:!0,mapTypeControl:!1,styles:[{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]}],minZoom:3}},googleMapLoader:D,yesIWantToUseGoogleMapApiInternals:!1,style:{width:"100%",height:"100%",margin:0,padding:0,position:"relative"},layerTypes:[],heatmap:{},heatmapLibrary:!1,shouldUnregisterMapOnUnmount:!0},ue.googleMapLoader=D;export default ue;export{me as convertNeSwToNwSe,ge as convertNwSeToNeSw,_e as fitBounds,ye as getTilesIds,Me as latLng2Tile,fe as meters2ScreenPixels,ve as tile2LatLng};
//# sourceMappingURL=index.modern.js.map
