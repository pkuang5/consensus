{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/Poll.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport database from '../firebase';\nimport Deck from './Deck';\nimport Loader from './loader';\nimport Progress from 'react-progressbar';\n\nfunction Poll(props) {\n  const [data, setData] = useState([]);\n  const [progressPercentage, setProgressPercentage] = useState(0);\n  useEffect(() => {\n    var arr = [];\n    database.ref(`groups/${props.groupCode}`).once(\"value\", snapshot => {\n      snapshot.forEach(data => {\n        // let item = {\n        //     id: data.key,\n        //     name: data.val().name,\n        //     photos: data.val().photos,\n        //     lat: data.val().lat,\n        //     lng: data.val().lng,\n        //     price: data.val().price,\n        // }\n        // arr.push(item)\n        arr.push(data.val());\n      });\n      setData(data.concat(arr));\n    });\n  }, [props.groupCode]);\n  if (data.length == 0) return /*#__PURE__*/React.createElement(Loader, {\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"flex flex-col items-center bg-yellow-300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"text-4xl absolute text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"consensus\"), /*#__PURE__*/React.createElement(Deck, {\n    groupCode: props.groupCode,\n    data: data,\n    setProgressPercentage: percent => setProgressPercentage(percent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Progress, {\n    completed: progressPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Poll;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/Poll.jsx"],"names":["React","useState","useEffect","database","Deck","Loader","Progress","Poll","props","data","setData","progressPercentage","setProgressPercentage","arr","ref","groupCode","once","snapshot","forEach","push","val","concat","length","percent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,CAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,GAAG,GAAG,EAAV;AACAV,IAAAA,QAAQ,CAACW,GAAT,CAAc,UAASN,KAAK,CAACO,SAAU,EAAvC,EAA0CC,IAA1C,CAA+C,OAA/C,EAAyDC,QAAD,IAAc;AAClEA,MAAAA,QAAQ,CAACC,OAAT,CAAkBT,IAAD,IAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,QAAAA,GAAG,CAACM,IAAJ,CAASV,IAAI,CAACW,GAAL,EAAT;AACH,OAXD;AAYAV,MAAAA,OAAO,CAACD,IAAI,CAACY,MAAL,CAAYR,GAAZ,CAAD,CAAP;AACH,KAdD;AAeH,GAjBQ,EAiBN,CAACL,KAAK,CAACO,SAAP,CAjBM,CAAT;AAmBA,MAAIN,IAAI,CAACa,MAAL,IAAe,CAAnB,EAAsB,oBAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAAtB,KACK,oBACD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,0CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,KAAK,EAAC,oCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEd,KAAK,CAACO,SAAvB;AAAkC,IAAA,IAAI,EAAEN,IAAxC;AAA8C,IAAA,qBAAqB,EAAGc,OAAD,IAAaX,qBAAqB,CAACW,OAAD,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEZ,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADC;AAUR;;AAED,eAAeJ,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport database from '../firebase'\nimport Deck from './Deck'\nimport Loader from './loader'\nimport Progress from 'react-progressbar'\n\nfunction Poll(props) {\n    const [data, setData] = useState([])\n    const [progressPercentage, setProgressPercentage] = useState(0)\n\n    useEffect(() => {\n        var arr = []\n        database.ref(`groups/${props.groupCode}`).once(\"value\", (snapshot) => {\n            snapshot.forEach((data) => {\n                // let item = {\n                //     id: data.key,\n                //     name: data.val().name,\n                //     photos: data.val().photos,\n                //     lat: data.val().lat,\n                //     lng: data.val().lng,\n                //     price: data.val().price,\n                // }\n                // arr.push(item)\n                arr.push(data.val())\n            })\n            setData(data.concat(arr))\n        })\n    }, [props.groupCode])\n\n    if (data.length == 0) return <Loader loading={true} />\n    else return (\n        <React.Fragment>\n            <div class=\"flex flex-col items-center bg-yellow-300\">\n                <p class=\"text-4xl absolute text-center mt-5\">consensus</p>\n                <Deck groupCode={props.groupCode} data={data} setProgressPercentage={(percent) => setProgressPercentage(percent)}/>\n            </div>\n            <Progress completed={progressPercentage} />\n        </React.Fragment>\n    )\n\n}\n\nexport default Poll"]},"metadata":{},"sourceType":"module"}