{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/question.js\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Question(props) {\n  const [index, setIndex] = useState(0);\n  const questions = [{\n    id: 1,\n    question: \"How many people are in your group?\"\n  }, {\n    id: 2,\n    question: \"Can we use your location to find the best spots to eat nearby?\"\n  }, {\n    id: 3,\n    question: \"This place should be within ____ miles from me\"\n  }, {\n    id: 4,\n    question: \"We want to eat in __(city)__\"\n  }, {\n    id: 5,\n    question: \"We want to spend($ $$ $$$)\"\n  }, {\n    id: 6,\n    question: \"We want to eat at a (Restaurant, Diner, Fast Food, Drinks & Desserts. ~Choose up to three~\"\n  }, {\n    id: 7,\n    question: \"(Optional) We want ___type of food___\"\n  }, {\n    id: 8,\n    question: \"How many options do you want to choose from (5 10 15 20)\"\n  }, {\n    id: 9,\n    question: \"We want our group's top (1 2 3)\"\n  }];\n  const statements = [{\n    id: 1,\n    message: \"Let's get started! Here are a couple questions to help us provide your group with best options!\"\n  }, {\n    id: 2,\n    message: \"Thank you for your responses! Now its time to reach a consensus!\"\n  }];\n  const question = questions[index];\n\n  function handleContinue() {\n    if (index + 1 < questions.length) {\n      console.log(\"question #\" + question.id);\n      setIndex(index + 1);\n    }\n  }\n\n  function handlePrevious() {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-md mx-auto flex p-6 bg-gray-100 mt-10 rounded-lg shadow-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-6 pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl text-blue-700 leading-tight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Question #\", question.id), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-base text-gray-700 leading-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, question.question), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"border rounded-md w-10 text-center\",\n    placeholder: \"##\",\n    id: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\",\n    onClick: () => handlePrevious(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\",\n    onClick: () => handleContinue(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Continue\")));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/question.js"],"names":["React","useState","useEffect","Question","props","index","setIndex","questions","id","question","statements","message","handleContinue","length","console","log","handlePrevious"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Question(props) {\n  const [index, setIndex] = useState(0);\n  const questions = [\n    { id: 1, question: \"How many people are in your group?\" },\n    {\n      id: 2,\n      question:\n        \"Can we use your location to find the best spots to eat nearby?\",\n    },\n    { id: 3, question: \"This place should be within ____ miles from me\" },\n    { id: 4, question: \"We want to eat in __(city)__\" },\n    { id: 5, question: \"We want to spend($ $$ $$$)\" },\n    {\n      id: 6,\n      question:\n        \"We want to eat at a (Restaurant, Diner, Fast Food, Drinks & Desserts. ~Choose up to three~\",\n    },\n    { id: 7, question: \"(Optional) We want ___type of food___\" },\n    {\n      id: 8,\n      question: \"How many options do you want to choose from (5 10 15 20)\",\n    },\n    { id: 9, question: \"We want our group's top (1 2 3)\" },\n  ];\n\n  const statements = [\n    {\n      id: 1,\n      message:\n        \"Let's get started! Here are a couple questions to help us provide your group with best options!\",\n    },\n    {\n      id: 2,\n      message:\n        \"Thank you for your responses! Now its time to reach a consensus!\",\n    },\n  ];\n\n  const question = questions[index];\n\n  function handleContinue() {\n    if (index + 1 < questions.length) {\n      console.log(\"question #\" + question.id);\n      setIndex(index + 1);\n    }\n  }\n\n  function handlePrevious() {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n    }\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto flex p-6 bg-gray-100 mt-10 rounded-lg shadow-xl\">\n      <div className=\"ml-6 pt-1\">\n        <h1 className=\"text-2xl text-blue-700 leading-tight\">\n          Question #{question.id}\n        </h1>\n        <p className=\"text-base text-gray-700 leading-normal\">\n          {question.question}\n        </p>\n        <input\n          class=\"border rounded-md w-10 text-center\"\n          placeholder=\"##\"\n          id=\"category\"\n        ></input>\n        <br></br>\n        <button\n          class=\"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\"\n          onClick={() => handlePrevious()}\n        >\n          Back\n        </button>\n        <button\n          class=\"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\"\n          onClick={() => handleContinue()}\n        >\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}