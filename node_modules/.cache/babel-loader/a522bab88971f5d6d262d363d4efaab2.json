{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/question.js\";\nimport React, { useState, useEffect } from \"react\"; // import {\n//   isConditionalExpression,\n//   isConstTypeReference,\n//   isThisTypeNode,\n// } from \"typescript\";\n\nfunction Question(props) {\n  const [index, setIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const questions = [{\n    id: 1,\n    question: \"How many people are in your group?\"\n  }, {\n    id: 2,\n    question: \"Can we use your location to find the best spots to eat nearby?\"\n  }, {\n    id: 3,\n    question: \"This place should be within ____ miles from me\"\n  }, {\n    id: 4,\n    question: \"We want to eat in __(city)__\"\n  }, {\n    id: 5,\n    question: \"We want to spend($ $$ $$$)\"\n  }, {\n    id: 6,\n    question: \"We want to eat at a (Restaurant, Diner, Fast Food, Drinks & Desserts. ~Choose up to three~\"\n  }, {\n    id: 7,\n    question: \"(Optional) We want ___type of food___\"\n  }, {\n    id: 8,\n    question: \"How many options do you want to choose from (5 10 15 20)\"\n  }, {\n    id: 9,\n    question: \"We want our group's top (1 2 3)\"\n  }];\n  const statements = [{\n    id: 1,\n    message: \"Let's get started! Here are a couple questions to help us provide your group with best options!\"\n  }, {\n    id: 2,\n    message: \"Thank you for your responses! Now its time to reach a consensus!\"\n  }];\n  const question = questions[index];\n\n  const handleContinue = input => {\n    if (index + 1 < questions.length && document.getElementById(\"input\").value != \"\") {\n      console.log(\"question #\" + question.id);\n      setIndex(index + 1);\n      answers[index] = input; //setAnswers((answers) => [...answers, input]);\n\n      console.log(index);\n      document.getElementById(\"input\").value = \"\";\n\n      if (answers[index + 1] != null) {\n        document.getElementById(\"input\").value = answers[index + 1];\n      }\n    }\n  };\n\n  const handlePrevious = () => {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n      console.log(index);\n\n      if (answers[index - 1] != null) {\n        document.getElementById(\"input\").value = answers[index - 1];\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-md mx-auto flex p-6 bg-gray-100 mt-10 rounded-lg shadow-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-6 pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"id\",\n    className: \"text-2xl text-blue-700 leading-tight text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Question #\", question.id), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-base text-gray-700 leading-normal text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, question.question), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"field\",\n    id: \"input\",\n    type: \"text\",\n    class: \"border rounded-md w-10 text-center\",\n    placeholder: \"##\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\",\n    onClick: () => handlePrevious(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\",\n    type: \"button\",\n    onClick: () => handleContinue(document.getElementById(\"input\").value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Continue\")));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/question.js"],"names":["React","useState","useEffect","Question","props","index","setIndex","answers","setAnswers","questions","id","question","statements","message","handleContinue","input","length","document","getElementById","value","console","log","handlePrevious"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import {\n//   isConditionalExpression,\n//   isConstTypeReference,\n//   isThisTypeNode,\n// } from \"typescript\";\n\nfunction Question(props) {\n  const [index, setIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n\n  const questions = [\n    { id: 1, question: \"How many people are in your group?\" },\n    {\n      id: 2,\n      question:\n        \"Can we use your location to find the best spots to eat nearby?\",\n    },\n    { id: 3, question: \"This place should be within ____ miles from me\" },\n    { id: 4, question: \"We want to eat in __(city)__\" },\n    { id: 5, question: \"We want to spend($ $$ $$$)\" },\n    {\n      id: 6,\n      question:\n        \"We want to eat at a (Restaurant, Diner, Fast Food, Drinks & Desserts. ~Choose up to three~\",\n    },\n    { id: 7, question: \"(Optional) We want ___type of food___\" },\n    {\n      id: 8,\n      question: \"How many options do you want to choose from (5 10 15 20)\",\n    },\n    { id: 9, question: \"We want our group's top (1 2 3)\" },\n  ];\n\n  const statements = [\n    {\n      id: 1,\n      message:\n        \"Let's get started! Here are a couple questions to help us provide your group with best options!\",\n    },\n    {\n      id: 2,\n      message:\n        \"Thank you for your responses! Now its time to reach a consensus!\",\n    },\n  ];\n\n  const question = questions[index];\n\n  const handleContinue = (input) => {\n    if (\n      index + 1 < questions.length &&\n      document.getElementById(\"input\").value != \"\"\n    ) {\n      console.log(\"question #\" + question.id);\n      setIndex(index + 1);\n      answers[index] = input;\n      //setAnswers((answers) => [...answers, input]);\n      console.log(index);\n      document.getElementById(\"input\").value = \"\";\n      if (answers[index + 1] != null) {\n        document.getElementById(\"input\").value = answers[index + 1];\n      }\n    }\n  };\n\n  const handlePrevious = () => {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n      console.log(index);\n      if (answers[index - 1] != null) {\n        document.getElementById(\"input\").value = answers[index - 1];\n      }\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto flex p-6 bg-gray-100 mt-10 rounded-lg shadow-xl\">\n      <div className=\"ml-6 pt-1\">\n        <br></br>\n        <h1\n          id=\"id\"\n          className=\"text-2xl text-blue-700 leading-tight text-center\"\n        >\n          Question #{question.id}\n        </h1>\n        <p className=\"text-base text-gray-700 leading-normal text-center\">\n          {question.question}\n        </p>\n        <input\n          className=\"field\"\n          id=\"input\"\n          type=\"text\"\n          class=\"border rounded-md w-10 text-center\"\n          placeholder=\"##\"\n        ></input>\n        <br></br>\n        <button\n          class=\"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\"\n          onClick={() => handlePrevious()}\n        >\n          Back\n        </button>\n        <button\n          class=\"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\"\n          type=\"button\"\n          onClick={() => handleContinue(document.getElementById(\"input\").value)}\n        >\n          Continue\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}