{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/question.js\";\nimport React, { useState, useEffect, cloneElement } from \"react\";\nimport database from \"../firebase\"; // import {\n//   isConditionalExpression,\n//   isConstTypeReference,\n//   isThisTypeNode,\n// } from \"typescript\";\n\nfunction Question(props) {\n  const [index, setIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const questions = [{\n    id: 1,\n    question: \"How many people are in your group?\"\n  }, {\n    id: 2,\n    question: \"Can we use your location to find the best spots to eat nearby?\"\n  }, {\n    id: 3,\n    question: \"This place should be within ____ miles from me\"\n  }, {\n    id: 4,\n    question: \"We want to eat in __(city)__\"\n  }, {\n    id: 5,\n    question: \"We want to spend($ $$ $$$)\"\n  }, {\n    id: 6,\n    question: \"We want to eat at a (Restaurant, Diner, Fast Food, Drinks & Desserts. ~Choose up to three~\"\n  }, {\n    id: 7,\n    question: \"(Optional) We want ___type of food___\"\n  }, {\n    id: 8,\n    question: \"How many options do you want to choose from (5 10 15 20)\"\n  }, {\n    id: 9,\n    question: \"We want our group's top (1 2 3)\"\n  }, {\n    id: 10,\n    question: \"Thank you for your responses! Now its time to reach a consensus!\"\n  }];\n  const statements = [{\n    id: 1,\n    message: \"Let's get started! Here are a couple questions to help us provide your group with best options!\"\n  }, {\n    id: 2,\n    message: \"Thank you for your responses! Now its time to reach a consensus!\"\n  }];\n  var question = questions[index];\n\n  const handleSubmit = () => {\n    database.ref(`answers`).set({\n      q1: answers[0],\n      q2: answers[1],\n      q3: answers[2],\n      q4: answers[3],\n      q5: answers[4],\n      q6: answers[5],\n      q7: answers[6],\n      q8: answers[7],\n      q9: answers[8]\n    }).then(() => {\n      alert(\"Question 1 was answeredðŸ’«\");\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n\n  const handleContinue = input => {\n    if (index + 1 <= questions.length && document.getElementById(\"input\").value != \"\") {\n      console.log(\"question #\" + question.id);\n      answers[index] = input; //setAnswers((answers) => [...answers, input]);\n\n      setIndex(index + 1);\n      console.log(index);\n      console.log(answers);\n      document.getElementById(\"input\").value = \"\";\n      console.log(\"Works\");\n\n      if (answers[index + 1] != null) {\n        document.getElementById(\"input\").value = answers[index + 1];\n      }\n\n      database.ref(`answers/q${question.id}`).set(input).then(() => {//console.log(\"Question\" + question.id + \"was sourcedðŸ’«\");\n      }).catch(error => {\n        alert(error.message);\n      });\n    }\n  };\n\n  const handlePrevious = input => {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n      console.log(\"question #\" + question.id);\n      console.log(index);\n\n      if (answers[index - 1] != null) {\n        document.getElementById(\"input\").value = answers[index - 1];\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-md mx-auto flex p-6 bg-gray-100 mt-10 rounded-lg shadow-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-6 pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }), question.id != 10 && question.id != 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl text-blue-700 leading-tight text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Question #\", question.id), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-base text-gray-700 leading-normal text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, questions[index].question), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"field\",\n    id: \"input\",\n    type: \"text\",\n    class: \"border rounded-md w-10 text-center\",\n    placeholder: \"##\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\",\n    onClick: () => handlePrevious(document.getElementById(\"input\").value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\",\n    type: \"submit\",\n    onClick: () => handleContinue(document.getElementById(\"input\").value) //onClick={() => handleSubmit()}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Submit\")) : /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl text-blue-700 leading-tight text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, statements[1].message)));\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/question.js"],"names":["React","useState","useEffect","cloneElement","database","Question","props","index","setIndex","answers","setAnswers","questions","id","question","statements","message","handleSubmit","ref","set","q1","q2","q3","q4","q5","q6","q7","q8","q9","then","alert","catch","error","handleContinue","input","length","document","getElementById","value","console","log","handlePrevious"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, cloneElement } from \"react\";\nimport database from \"../firebase\";\n// import {\n//   isConditionalExpression,\n//   isConstTypeReference,\n//   isThisTypeNode,\n// } from \"typescript\";\n\nfunction Question(props) {\n  const [index, setIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n\n  const questions = [\n    { id: 1, question: \"How many people are in your group?\" },\n    {\n      id: 2,\n      question:\n        \"Can we use your location to find the best spots to eat nearby?\",\n    },\n    { id: 3, question: \"This place should be within ____ miles from me\" },\n    { id: 4, question: \"We want to eat in __(city)__\" },\n    { id: 5, question: \"We want to spend($ $$ $$$)\" },\n    {\n      id: 6,\n      question:\n        \"We want to eat at a (Restaurant, Diner, Fast Food, Drinks & Desserts. ~Choose up to three~\",\n    },\n    { id: 7, question: \"(Optional) We want ___type of food___\" },\n    {\n      id: 8,\n      question: \"How many options do you want to choose from (5 10 15 20)\",\n    },\n    { id: 9, question: \"We want our group's top (1 2 3)\" },\n    {\n      id: 10,\n      question:\n        \"Thank you for your responses! Now its time to reach a consensus!\",\n    },\n  ];\n\n  const statements = [\n    {\n      id: 1,\n      message:\n        \"Let's get started! Here are a couple questions to help us provide your group with best options!\",\n    },\n    {\n      id: 2,\n      message:\n        \"Thank you for your responses! Now its time to reach a consensus!\",\n    },\n  ];\n\n  var question = questions[index];\n\n  const handleSubmit = () => {\n    database\n      .ref(`answers`)\n      .set({\n        q1: answers[0],\n        q2: answers[1],\n        q3: answers[2],\n        q4: answers[3],\n        q5: answers[4],\n        q6: answers[5],\n        q7: answers[6],\n        q8: answers[7],\n        q9: answers[8],\n      })\n      .then(() => {\n        alert(\"Question 1 was answeredðŸ’«\");\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  const handleContinue = (input) => {\n    if (\n      index + 1 <= questions.length &&\n      document.getElementById(\"input\").value != \"\"\n    ) {\n      console.log(\"question #\" + question.id);\n      answers[index] = input;\n      //setAnswers((answers) => [...answers, input]);\n      setIndex(index + 1);\n      console.log(index);\n      console.log(answers);\n      document.getElementById(\"input\").value = \"\";\n      console.log(\"Works\");\n      if (answers[index + 1] != null) {\n        document.getElementById(\"input\").value = answers[index + 1];\n      }\n\n      database\n        .ref(`answers/q${question.id}`)\n        .set(input)\n        .then(() => {\n          //console.log(\"Question\" + question.id + \"was sourcedðŸ’«\");\n        })\n        .catch((error) => {\n          alert(error.message);\n        });\n    }\n  };\n\n  const handlePrevious = (input) => {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n      console.log(\"question #\" + question.id);\n      console.log(index);\n      if (answers[index - 1] != null) {\n        document.getElementById(\"input\").value = answers[index - 1];\n      }\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto flex p-6 bg-gray-100 mt-10 rounded-lg shadow-xl\">\n      <div className=\"ml-6 pt-1\">\n        <br></br>\n        {question.id != 10 && question.id != 0 ? (\n          <div>\n            <h1 className=\"text-2xl text-blue-700 leading-tight text-center\">\n              Question #{question.id}\n            </h1>\n            <p className=\"text-base text-gray-700 leading-normal text-center\">\n              {questions[index].question}\n            </p>\n            <input\n              className=\"field\"\n              id=\"input\"\n              type=\"text\"\n              class=\"border rounded-md w-10 text-center\"\n              placeholder=\"##\"\n            ></input>\n            <br></br>\n            <button\n              class=\"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\"\n              onClick={() =>\n                handlePrevious(document.getElementById(\"input\").value)\n              }\n            >\n              Back\n            </button>\n            <button\n              class=\"btn btn-primary w-20 h-10 bg-yellow-600 text-white m-2\"\n              type=\"submit\"\n              onClick={() =>\n                handleContinue(document.getElementById(\"input\").value)\n              }\n              //onClick={() => handleSubmit()}\n            >\n              Submit\n            </button>\n          </div>\n        ) : (\n          <h1 className=\"text-2xl text-blue-700 leading-tight text-center\">\n            {statements[1].message}\n          </h1>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}