{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/Results.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transition, animated } from 'react-spring';\nimport database from '../firebase';\nimport Carousel from \"nuka-carousel\";\nimport { useSprings } from \"react-spring/hooks\";\nimport ReactDOM from 'react-dom';\nimport '../styles/Results.css';\n\nfunction Place({\n  i,\n  data\n}) {\n  //const { name, vote } = data;\n  console.log(data);\n  console.log(i);\n  var state = {\n    show: true\n  };\n\n  if (i <= 2) {\n    return (\n      /*#__PURE__*/\n      // <div>\n      //     <Transition\n      //         native\n      //         items={state.show}\n      //         from={{ overflow: 'hidden', height: 0 }}\n      //         enter={[{ height: 'auto' }]}\n      //         leave={{ height: 0 }}>\n      //         {show =>\n      //             show && (props => <animated.div style={props}>\n      //                 <div className = 'rows' style = {{ height : 70, opacity: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n      //                     {/* <div className = \"circle\">\n      //                         {photos.map((pic, index) => (\n      //                             <img src={pic} key={index} alt=\"profilePicture\" />\n      //                         ))}\n      //                     </div> */}\n      //                     <div style = {{overflow: 'hidden', width: '100%' , color: 'white' , display: 'flex' , justifyContent: 'center', alignItems: 'center', fontSize: '2em', fontFamily: \"'Kanit', sans-serif\", textTransform: 'uppercase'}}>\n      //                         {name} with a vote of {vote}\n      //                     </div>\n      //                 </div>\n      //             </animated.div>)\n      //         }\n      //     </Transition>\n      //     <div style = {{height : 20}}/>\n      // </div>\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })\n    );\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nfunction Results(props) {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    database.ref(`groups/${props.groupCode}/data`).once(\"value\", snapshot => {\n      snapshot.forEach(item => {\n        var temp = item.val();\n        data.push(temp);\n      });\n      data.sort((a, b) => b.vote - a.vote);\n      setData(data);\n    });\n    console.log(data);\n  }, [props.groupCode]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"h-screen w-screen\",\n    style: {\n      background: 'black',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Place, {\n    i: 1,\n    data: data[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/Results.js"],"names":["React","useState","useEffect","Transition","animated","database","Carousel","useSprings","ReactDOM","Place","i","data","console","log","state","show","Results","props","setData","ref","groupCode","once","snapshot","forEach","item","temp","val","push","sort","a","b","vote","background","display","flexDirection","justifyContent","alignItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,cAArC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,uBAAP;;AAIA,SAASC,KAAT,CAAe;AAACC,EAAAA,CAAD;AAAIC,EAAAA;AAAJ,CAAf,EAAyB;AACrB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA,MAAII,KAAK,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAZ;;AACA,MAAIL,CAAC,IAAI,CAAT,EAAW;AACP;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBJ;AA2BH,GA5BD,MA4BO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AACJ;;AAED,SAASM,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,CAACc,GAAT,CAAc,UAASF,KAAK,CAACG,SAAU,OAAvC,EAA+CC,IAA/C,CAAoD,OAApD,EAA8DC,QAAD,IAAc;AACvEA,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,IAAI,IAAI;AACrB,YAAIC,IAAI,GAAGD,IAAI,CAACE,GAAL,EAAX;AACAf,QAAAA,IAAI,CAACgB,IAAL,CAAUF,IAAV;AACH,OAHD;AAIAd,MAAAA,IAAI,CAACiB,IAAL,CAAU,CAACC,CAAD,EAAGC,CAAH,KAASA,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAA9B;AACAb,MAAAA,OAAO,CAACP,IAAD,CAAP;AACH,KAPD;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAVQ,EAUN,CAACM,KAAK,CAACG,SAAP,CAVM,CAAT;AAYA,sBACI;AAAK,IAAA,KAAK,EAAC,mBAAX;AAA+B,IAAA,KAAK,EAAI;AAAEY,MAAAA,UAAU,EAAG,OAAf;AAAwBC,MAAAA,OAAO,EAAE,MAAjC;AAAyCC,MAAAA,aAAa,EAAE,QAAxD;AAAkEC,MAAAA,cAAc,EAAE,QAAlF;AAA4FC,MAAAA,UAAU,EAAE;AAAxG,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,KAAD;AAAO,IAAA,CAAC,EAAI,CAAZ;AAAe,IAAA,IAAI,EAAIzB,IAAI,CAAC,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH;;AAED,eAAeK,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Transition, animated } from 'react-spring'\nimport database from '../firebase';\nimport Carousel from \"nuka-carousel\";\nimport { useSprings } from \"react-spring/hooks\";\nimport ReactDOM from 'react-dom'\n\nimport '../styles/Results.css'\n\n\n\nfunction Place({i, data}){\n    //const { name, vote } = data;\n    console.log(data)\n    console.log(i)\n    var state = { show: true };\n    if (i <= 2){\n        return (\n            // <div>\n            //     <Transition\n            //         native\n            //         items={state.show}\n            //         from={{ overflow: 'hidden', height: 0 }}\n            //         enter={[{ height: 'auto' }]}\n            //         leave={{ height: 0 }}>\n            //         {show =>\n            //             show && (props => <animated.div style={props}>\n            //                 <div className = 'rows' style = {{ height : 70, opacity: 1, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n            //                     {/* <div className = \"circle\">\n            //                         {photos.map((pic, index) => (\n            //                             <img src={pic} key={index} alt=\"profilePicture\" />\n            //                         ))}\n            //                     </div> */}\n            //                     <div style = {{overflow: 'hidden', width: '100%' , color: 'white' , display: 'flex' , justifyContent: 'center', alignItems: 'center', fontSize: '2em', fontFamily: \"'Kanit', sans-serif\", textTransform: 'uppercase'}}>\n            //                         {name} with a vote of {vote}\n            //                     </div>\n            //                 </div>\n            //             </animated.div>)\n            //         }\n            //     </Transition>\n            //     <div style = {{height : 20}}/>\n            // </div>\n            <div/>\n        );\n    } else {\n        return(\n            <div/>\n        );\n    }\n}\n\nfunction Results(props) {\n\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        database.ref(`groups/${props.groupCode}/data`).once(\"value\", (snapshot) => {\n            snapshot.forEach(item => {\n                var temp = item.val()\n                data.push(temp)\n            })\n            data.sort((a,b) => b.vote - a.vote)\n            setData(data)\n        })\n        console.log(data)\n    }, [props.groupCode])\n    \n    return(\n        <div class=\"h-screen w-screen\" style = {{ background : 'black', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n            {/* {data.map(({}, i) => (\n                <Place\n                    i = {i}\n                    data = {data}\n                />\n            ))} */}\n            <Place i = {1} data = {data[1]} />\n        </div>\n    );\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}