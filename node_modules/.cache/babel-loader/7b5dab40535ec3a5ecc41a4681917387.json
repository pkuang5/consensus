{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/Results.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transition, animated } from 'react-spring';\nimport database from '../firebase';\nimport { useSprings } from \"react-spring/hooks\";\nimport ReactDOM from 'react-dom';\nimport '../styles/Results.css';\nimport { render } from \"@testing-library/react\";\n\nfunction Place({\n  i,\n  data\n}) {\n  const {\n    name,\n    vote\n  } = data[i];\n  var state = {\n    show: true\n  };\n\n  if (i <= 2) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Transition, {\n      native: true,\n      items: state.show,\n      from: {\n        overflow: 'hidden',\n        height: 0\n      },\n      enter: [{\n        height: 'auto'\n      }],\n      leave: {\n        height: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, show => show && (props => /*#__PURE__*/React.createElement(animated.div, {\n      style: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"w-screen\",\n      style: {\n        height: 50,\n        background: 'lightgreen',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, name)))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nfunction Results(props) {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    var arr = [];\n    database.ref(`groups/${props.groupCode}`).once(\"value\", snapshot => {\n      snapshot.forEach(data => {\n        arr.push(data.val());\n      });\n      arr.sort((a, b) => b.vote - a.vote);\n      setData(data.concat(arr));\n    });\n  }, [props.groupCode]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"h-screen w-screen\",\n    style: {\n      background: 'lightyellow',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, data.map(({}, i) => /*#__PURE__*/React.createElement(Place, {\n    i: i,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/Results.js"],"names":["React","useState","useEffect","Transition","animated","database","useSprings","ReactDOM","render","Place","i","data","name","vote","state","show","overflow","height","props","background","display","flexDirection","justifyContent","alignItems","Results","setData","arr","ref","groupCode","once","snapshot","forEach","push","val","sort","a","b","concat","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Transition, animated } from 'react-spring'\nimport database from '../firebase';\nimport { useSprings } from \"react-spring/hooks\";\nimport ReactDOM from 'react-dom'\n\nimport '../styles/Results.css'\nimport { render } from \"@testing-library/react\";\n\n\nfunction Place({i, data}){\n    const { name, vote } = data[i];\n    var state = { show: true };\n    if (i <= 2){\n        return (\n            <div>\n                <Transition\n                    native\n                    items={state.show}\n                    from={{ overflow: 'hidden', height: 0 }}\n                    enter={[{ height: 'auto' }]}\n                    leave={{ height: 0 }}>\n                    {show =>\n                        show && (props => <animated.div style={props}>\n                            <div class = \"w-screen\" style = {{ height : 50, background : 'lightgreen', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n                                {name}\n                            </div>\n                        </animated.div>)\n                    }\n                </Transition>\n            </div>\n        );\n    } else {\n        return(\n            <div/>\n        );\n    }\n}\n\nfunction Results(props) {\n\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        var arr = []\n        database.ref(`groups/${props.groupCode}`).once(\"value\", (snapshot) => {\n            snapshot.forEach((data) => {\n                arr.push(data.val())\n            })\n            arr.sort((a,b) => b.vote - a.vote)\n            setData(data.concat(arr))\n        })\n    }, [props.groupCode])\n    \n    return(\n        <div class=\"h-screen w-screen\" style = {{ background : 'lightyellow', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n            {data.map(({}, i) => (\n                <Place\n                    i = {i}\n                    data = {data}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}