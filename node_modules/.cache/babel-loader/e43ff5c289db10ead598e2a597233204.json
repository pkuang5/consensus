{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/Deck.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSprings } from \"react-spring/hooks\";\nimport { useGesture } from \"react-with-gesture\";\nimport database from \"../firebase\";\nimport Card from \"./Card\";\nimport \"../styles/Deck.css\";\n\nconst to = i => ({\n  x: 0,\n  y: 0,\n  scale: 1,\n  rot: 0,\n  delay: i * 100\n});\n\nconst from = i => ({\n  rot: 0,\n  scale: 1.5,\n  y: -1000\n});\n\nconst trans = (r, s) => `perspective(1500px) rotateX(0deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\n\nfunction Deck(props) {\n  const [gone] = useState(() => new Set());\n\n  function updateVote(groupCode, id, increment) {\n    database.ref(`groups/${groupCode}/${id}/vote`).transaction(function (vote) {\n      if (increment == 1) return (vote || 0) + increment;\n    });\n  }\n\n  const [cards, set] = useSprings(props.data.length, i => ({ ...to(i),\n    from: from(i)\n  }));\n  const bind = useGesture(({\n    args: [index],\n    down,\n    delta: [xDelta],\n    distance,\n    direction: [xDir],\n    velocity\n  }) => {\n    const trigger = velocity > 0.2;\n    const dir = xDir < 0 ? -1 : 1;\n    if (!down && trigger) gone.add(index);\n    set(i => {\n      if (index !== i) return;\n      const isGone = gone.has(index);\n\n      if (isGone) {\n        props.setProgressPercentage((props.data.length - index) / props.data.length * 100);\n        updateVote(props.groupCode, props.data[index].id, dir); // flash background color to indiciate upvote or downvote ??\n      }\n\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n      const scale = down ? 1.1 : 1;\n      return {\n        x,\n        rot,\n        scale,\n        delay: undefined,\n        config: {\n          friction: 50,\n          tension: down ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n    if (!down && gone.size === props.data.length) setTimeout(() => gone.clear() || set(i => to(i)), 600);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"deck\",\n    class: \"deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, cards.map(({\n    x,\n    y,\n    rot,\n    scale\n  }, i) => /*#__PURE__*/React.createElement(Card, {\n    key: i,\n    i: i,\n    x: x,\n    y: y,\n    rot: rot,\n    scale: scale,\n    trans: trans,\n    data: props.data,\n    bind: bind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Deck;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/Deck.js"],"names":["React","useState","useEffect","useSprings","useGesture","database","Card","to","i","x","y","scale","rot","delay","from","trans","r","s","Deck","props","gone","Set","updateVote","groupCode","id","increment","ref","transaction","vote","cards","set","data","length","bind","args","index","down","delta","xDelta","distance","direction","xDir","velocity","trigger","dir","add","isGone","has","setProgressPercentage","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSprings } from \"react-spring/hooks\";\nimport { useGesture } from \"react-with-gesture\";\nimport database from \"../firebase\"\n\nimport Card from \"./Card\";\n\nimport \"../styles/Deck.css\";\n\nconst to = i => ({\n  x: 0,\n  y: 0,\n  scale: 1,\n  rot: 0,\n  delay: i * 100\n});\nconst from = i => ({ rot: 0, scale: 1.5, y: -1000 });\n\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(0deg) rotateY(${r /\n  10}deg) rotateZ(${r}deg) scale(${s})`;\n\nfunction Deck(props) {\n  const [gone] = useState(() => new Set());\n\n  function updateVote(groupCode, id, increment) {\n    database\n      .ref(`groups/${groupCode}/${id}/vote`)\n      .transaction(function (vote) {\n        if (increment == 1) return (vote || 0) + increment;\n      });\n  }\n\n  const [cards, set] = useSprings(props.data.length, i => ({\n    ...to(i),\n    from: from(i)\n  }));\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity\n    }) => {\n\n      const trigger = velocity > 0.2;\n\n      const dir = xDir < 0 ? -1 : 1;\n\n      if (!down && trigger) gone.add(index);\n\n\n      set(i => {\n        if (index !== i) return;\n        const isGone = gone.has(index);\n        if (isGone) {\n          props.setProgressPercentage((props.data.length - index) / props.data.length * 100)\n          updateVote(props.groupCode, props.data[index].id, dir)\n          // flash background color to indiciate upvote or downvote ??\n        }\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n\n        const scale = down ? 1.1 : 1;\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 }\n        };\n      });\n\n      if (!down && gone.size === props.data.length)\n        setTimeout(() => gone.clear() || set(i => to(i)), 600);\n    }\n  );\n\n  return (\n    <div id=\"deck\" class=\"deck\">\n      {cards.map(({ x, y, rot, scale }, i) => (\n        <Card\n          key={i}\n          i={i}\n          x={x}\n          y={y}\n          rot={rot}\n          scale={scale}\n          trans={trans}\n          data={props.data}\n          bind={bind}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Deck;\n"]},"metadata":{},"sourceType":"module"}