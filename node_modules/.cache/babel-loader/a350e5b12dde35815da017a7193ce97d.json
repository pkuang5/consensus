{"ast":null,"code":"var _jsxFileName = \"/Users/zionwang/Projects/consensus/src/components/Poll.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport database from '../firebase';\nimport Deck from './Deck';\nimport Loader from './loader';\nimport Progress from 'react-progressbar';\n\nfunction Poll(props) {\n  const [data, setData] = useState([]);\n  const [progressPercentage, setProgressPercentage] = useState(0);\n  useEffect(() => {\n    var arr = [];\n    database.ref(`groups/${props.groupCode}`).once(\"value\", snapshot => {\n      snapshot.forEach(data => {\n        let item = {\n          id: data.key,\n          name: data.val().name,\n          photos: data.val().photos,\n          lat: data.val().lat,\n          lng: data.val().lng\n        };\n        arr.push(item);\n      });\n      console.log(arr);\n      setData(data.concat(arr));\n    });\n  }, [props.groupCode]);\n  if (data.length == 0) return /*#__PURE__*/React.createElement(Loader, {\n    loading: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }\n  });else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Progress, {\n    completed: progressPercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Deck, {\n    groupCode: props.groupCode,\n    data: data,\n    setProgressPercentage: percent => setProgressPercentage(percent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Poll;","map":{"version":3,"sources":["/Users/zionwang/Projects/consensus/src/components/Poll.jsx"],"names":["React","useState","useEffect","database","Deck","Loader","Progress","Poll","props","data","setData","progressPercentage","setProgressPercentage","arr","ref","groupCode","once","snapshot","forEach","item","id","key","name","val","photos","lat","lng","push","console","log","concat","length","percent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,CAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,GAAG,GAAG,EAAV;AACAV,IAAAA,QAAQ,CAACW,GAAT,CAAc,UAASN,KAAK,CAACO,SAAU,EAAvC,EAA0CC,IAA1C,CAA+C,OAA/C,EAAyDC,QAAD,IAAc;AAClEA,MAAAA,QAAQ,CAACC,OAAT,CAAkBT,IAAD,IAAU;AACvB,YAAIU,IAAI,GAAG;AACPC,UAAAA,EAAE,EAAEX,IAAI,CAACY,GADF;AAEPC,UAAAA,IAAI,EAAEb,IAAI,CAACc,GAAL,GAAWD,IAFV;AAGPE,UAAAA,MAAM,EAAEf,IAAI,CAACc,GAAL,GAAWC,MAHZ;AAIPC,UAAAA,GAAG,EAAEhB,IAAI,CAACc,GAAL,GAAWE,GAJT;AAKPC,UAAAA,GAAG,EAAEjB,IAAI,CAACc,GAAL,GAAWG;AALT,SAAX;AAOAb,QAAAA,GAAG,CAACc,IAAJ,CAASR,IAAT;AACH,OATD;AAUAS,MAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACAH,MAAAA,OAAO,CAACD,IAAI,CAACqB,MAAL,CAAYjB,GAAZ,CAAD,CAAP;AACH,KAbD;AAcH,GAhBQ,EAgBN,CAACL,KAAK,CAACO,SAAP,CAhBM,CAAT;AAkBA,MAAIN,IAAI,CAACsB,MAAL,IAAe,CAAnB,EAAsB,oBAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAAtB,KACK,oBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEpB,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,KAAK,CAACO,SAAvB;AAAkC,IAAA,IAAI,EAAEN,IAAxC;AAA8C,IAAA,qBAAqB,EAAGuB,OAAD,IAAapB,qBAAqB,CAACoB,OAAD,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADC;AAOR;;AAED,eAAezB,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport database from '../firebase'\nimport Deck from './Deck'\nimport Loader from './loader'\nimport Progress from 'react-progressbar'\n\nfunction Poll(props) {\n    const [data, setData] = useState([])\n    const [progressPercentage, setProgressPercentage] = useState(0)\n\n    useEffect(() => {\n        var arr = []\n        database.ref(`groups/${props.groupCode}`).once(\"value\", (snapshot) => {\n            snapshot.forEach((data) => {\n                let item = {\n                    id: data.key,\n                    name: data.val().name,\n                    photos: data.val().photos,\n                    lat: data.val().lat,\n                    lng: data.val().lng\n                }\n                arr.push(item)\n            })\n            console.log(arr)\n            setData(data.concat(arr))\n        })\n    }, [props.groupCode])\n\n    if (data.length == 0) return <Loader loading={true} />\n    else return (\n        <div>\n            <Progress completed={progressPercentage} />\n            <Deck groupCode={props.groupCode} data={data} setProgressPercentage={(percent) => setProgressPercentage(percent)}/>\n        </div>\n    )\n\n}\n\nexport default Poll"]},"metadata":{},"sourceType":"module"}